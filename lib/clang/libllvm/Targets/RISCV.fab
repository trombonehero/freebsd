# vim: sw=4:ts=4:tw=78
# $FreeBSD$

rules = target_tblgen_rules('RISCV', 'RISCV');
generated_headers =
[
	rules.asmMatcher()
	rules.asmWriter()
	rules.callingConv()
	rules.compressedInstEmitter()
	rules.disassembler()
	rules.instrInfo()
	rules.isel.dag()
	rules.mc.emitter()
	rules.mc.pseudoLowering()
	rules.reg.info()
	rules.subtarget()
	rules.system.operands()
];

sources =
{
	subdir = (llvmlibdir :: 'Target') :: 'RISCV';

	files(
		RISCVAsmPrinter.cpp RISCVExpandPseudoInsts.cpp RISCVFrameLowering.cpp
		RISCVInstrInfo.cpp RISCVISelDAGToDAG.cpp RISCVISelLowering.cpp
		RISCVMCInstLower.cpp RISCVMergeBaseOffset.cpp RISCVRegisterInfo.cpp
		RISCVSubtarget.cpp RISCVTargetMachine.cpp RISCVTargetObjectFile.cpp
	)
	+ files(RISCVAsmParser.cpp, subdir='AsmParser')
	+ files(RISCVDisassembler.cpp, subdir='Disassembler')
	+ files(RISCVInstPrinter.cpp, subdir='InstPrinter')
	+ files(
		RISCVAsmBackend.cpp RISCVELFObjectWriter.cpp RISCVELFStreamer.cpp
		RISCVMCAsmInfo.cpp RISCVMCCodeEmitter.cpp RISCVMCExpr.cpp
		RISCVMCTargetDesc.cpp RISCVTargetStreamer.cpp
		,
		subdir = 'MCTargetDesc'
	)
	+ files(RISCVTargetInfo.cpp, subdir='TargetInfo')
	+ files(RISCVBaseInfo.cpp RISCVMatInt.cpp, subdir='Utils')
};
