# $FreeBSD$

sources =
{
	subdir = llvmlibdir :: '';

#		Transforms/IPO/AlwaysInliner.cpp
#		Transforms/IPO/ArgumentPromotion.cpp
#		Transforms/IPO/BarrierNoopPass.cpp
#SRCS_EXT+=	Transforms/IPO/BlockExtractor.cpp
#		Transforms/IPO/CalledValuePropagation.cpp
#		Transforms/IPO/ConstantMerge.cpp
#		Transforms/IPO/CrossDSOCFI.cpp
#		Transforms/IPO/DeadArgumentElimination.cpp
#		Transforms/IPO/ElimAvailExtern.cpp
#		Transforms/IPO/ExtractGV.cpp
#		Transforms/IPO/ForceFunctionAttrs.cpp
#		Transforms/IPO/FunctionAttrs.cpp
#		Transforms/IPO/FunctionImport.cpp
#		Transforms/IPO/GlobalDCE.cpp
#		Transforms/IPO/GlobalOpt.cpp
#		Transforms/IPO/GlobalSplit.cpp
#		Transforms/IPO/HotColdSplitting.cpp
#		Transforms/IPO/IPConstantPropagation.cpp
#SRCS_EXT+=	Transforms/IPO/IPO.cpp
#		Transforms/IPO/InferFunctionAttrs.cpp
#		Transforms/IPO/InlineSimple.cpp
#		Transforms/IPO/Inliner.cpp
#		Transforms/IPO/Internalize.cpp
#		Transforms/IPO/LoopExtractor.cpp
#		Transforms/IPO/LowerTypeTests.cpp
#		Transforms/IPO/MergeFunctions.cpp
#		Transforms/IPO/PartialInlining.cpp
#		Transforms/IPO/PassManagerBuilder.cpp
#		Transforms/IPO/PruneEH.cpp
#		Transforms/IPO/SCCP.cpp
#		Transforms/IPO/SampleProfile.cpp
#		Transforms/IPO/StripDeadPrototypes.cpp
#		Transforms/IPO/StripSymbols.cpp
#		Transforms/IPO/SyntheticCountsPropagation.cpp
#		Transforms/IPO/ThinLTOBitcodeWriter.cpp
#		Transforms/IPO/WholeProgramDevirt.cpp
	files(
	)
};
