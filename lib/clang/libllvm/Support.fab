# $FreeBSD$

sources =
{
	subdir = llvmlibdir :: 'Support';

	files(
		AArch64TargetParser.cpp APFloat.cpp APInt.cpp APSInt.cpp
		ARMAttributeParser.cpp ARMBuildAttrs.cpp ARMTargetParser.cpp
		Allocator.cpp Atomic.cpp BinaryStreamError.cpp BinaryStreamReader.cpp
		BinaryStreamRef.cpp BinaryStreamWriter.cpp BlockFrequency.cpp
		BranchProbability.cpp BuryPointer.cpp CachePruning.cpp Chrono.cpp
		CodeGenCoverage.cpp CommandLine.cpp Compression.cpp ConvertUTF.cpp
		ConvertUTFWrapper.cpp CrashRecoveryContext.cpp DAGDeltaAlgorithm.cpp
		DJB.cpp DataExtractor.cpp Debug.cpp DebugCounter.cpp DeltaAlgorithm.cpp
		DynamicLibrary.cpp Errno.cpp Error.cpp ErrorHandling.cpp FoldingSet.cpp
		FormatVariadic.cpp FormattedStream.cpp GlobPattern.cpp GraphWriter.cpp
		Hashing.cpp Host.cpp InitLLVM.cpp IntEqClasses.cpp IntervalMap.cpp
		ItaniumManglingCanonicalizer.cpp JSON.cpp JamCRC.cpp KnownBits.cpp
		LEB128.cpp LineIterator.cpp Locale.cpp LockFileManager.cpp
		LowLevelType.cpp MD5.cpp ManagedStatic.cpp MathExtras.cpp
		MemoryBuffer.cpp Mutex.cpp NativeFormatting.cpp Options.cpp Path.cpp
		PluginLoader.cpp PrettyStackTrace.cpp Process.cpp Program.cpp
		RWMutex.cpp RandomNumberGenerator.cpp Regex.cpp SHA1.cpp
		ScaledNumber.cpp ScopedPrinter.cpp Signals.cpp SmallPtrSet.cpp
		SmallVector.cpp SourceMgr.cpp SpecialCaseList.cpp Statistic.cpp
		StringExtras.cpp StringMap.cpp StringRef.cpp StringSaver.cpp
		SymbolRemappingReader.cpp TargetParser.cpp TargetRegistry.cpp
		ThreadLocal.cpp ThreadPool.cpp Threading.cpp Timer.cpp
		ToolOutputFile.cpp TrigramIndex.cpp Triple.cpp Twine.cpp Unicode.cpp
		UnicodeCaseFold.cpp Valgrind.cpp VirtualFileSystem.cpp VersionTuple.cpp
		WithColor.cpp YAMLParser.cpp YAMLTraits.cpp

		circular_raw_ostream.cpp raw_os_ostream.cpp raw_ostream.cpp
	)
	#regcomp.c regerror.c regexec.c regfree.c regstrlcpy.c xxhash.cpp
	+
	if opts.clang_extras files(FileUtilities.cpp SystemUtils.cpp) else []
	+
	if opts.exl files(FileOutputBuffer.cpp) else []
	+
	if opts.lld files(Parallel.cpp TarWriter.cpp) else []
	+
	if opts.miw files(COM.cpp) else []
	+
	if opts.xdl files(Memory.cpp) else []
};
