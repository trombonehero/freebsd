# $FreeBSD$

incdir = llvminclude :: 'IR';
libdir = llvmlibdir :: 'IR';
gendir = mkdir(llvm_gendir, 'IR');

generated_sources =
[
	tblgen(incdir::'Attributes.td', 'attrs', gendir::'Attributes.inc')
	tblgen(incdir::'Intrinsics.td', 'intrinsic-enums', gendir::'IntrinsicEnums.inc')
	tblgen(incdir::'Intrinsics.td', 'intrinsic-impl', gendir::'IntrinsicImpl.inc')

	tblgen(libdir::'AttributesCompatFunc.td', 'attrs', gendir::'AttributesCompatFunc.inc')
];

sources =
{
	subdir = llvmlibdir :: 'IR';

	files(
		AsmWriter.cpp Attributes.cpp AutoUpgrade.cpp BasicBlock.cpp Comdat.cpp
		ConstantFold.cpp ConstantRange.cpp Constants.cpp Core.cpp
		DIBuilder.cpp DataLayout.cpp DebugInfo.cpp DebugInfoMetadata.cpp
		DebugLoc.cpp DiagnosticHandler.cpp DiagnosticInfo.cpp
		DiagnosticPrinter.cpp DomTreeUpdater.cpp Dominators.cpp Function.cpp
		GVMaterializer.cpp Globals.cpp IRBuilder.cpp IRPrintingPasses.cpp
		InlineAsm.cpp Instruction.cpp Instructions.cpp IntrinsicInst.cpp
		LLVMContext.cpp LLVMContextImpl.cpp LegacyPassManager.cpp
		MDBuilder.cpp Mangler.cpp Metadata.cpp Module.cpp
		ModuleSummaryIndex.cpp Operator.cpp OptBisect.cpp Pass.cpp
		PassInstrumentation.cpp PassManager.cpp PassRegistry.cpp
		PassTimingInfo.cpp ProfileSummary.cpp SafepointIRVerifier.cpp
		Statepoint.cpp Type.cpp TypeFinder.cpp Use.cpp User.cpp Value.cpp
		ValueSymbolTable.cpp Verifier.cpp
		,
		dependencies=generated_sources
	)
};
