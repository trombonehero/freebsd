# $FreeBSD$

mkdir:(file,string,bool)->file = args.mkdir;

opts = args.options;

llvm_gendir = mkdir(gendir, 'llvm');

#
# Wrapper around llvm-tblgen that uses our common LLVM include directory
#
tblgen = function(source:file, gen_action:string, target:file): file
{
	toolchain.tblgen.llvm(source, target,
	                      flags=['-gen-'+gen_action], includes=[llvmroot::'include'])
}
generated_headers =
[
	tblgen(((llvmlibdir::'Transforms')::'InstCombine')::'InstCombineTables.td',
	       'searchable-tables',
	       llvm_gendir::'InstCombineTables.inc')
];


sources =
	import('Analysis.fab').sources
	+
	{
		subdir = llvmlibdir :: 'AsmParser';
		files(LLLexer.cpp LLParser.cpp Parser.cpp)
	}
	+
	{
		subdir = llvmlibdir :: 'BinaryFormat';
		files(Dwarf.cpp Magic.cpp Wasm.cpp)
	}
	+ import('Bitcode.fab').sources
	+ import('CodeGen.fab').sources
	+ import('DebugInfo.fab').sources
	+ import('Demangle.fab').sources
	+ import('ExecutionEngine.fab').sources
	+ import('IR.fab').sources
	+
	{
		subdir = llvmlibdir :: 'IRReader';
		files(IRReader.cpp)
	}
	+ import('LTO.fab').sources
	+
	{
		subdir = llvmlibdir :: 'LineEditor';
		files(LineEditor.cpp)
	}
	+
	{
		subdir = llvmlibdir :: 'Linker';
		files(IRMover.cpp LinkModules.cpp)
	}
	+ import('MC.fab').sources
	+ import('MCA.fab').sources
	+ import('Object.fab').sources
	+ import('ObjectYAML.fab').sources
	+ import('Option.fab').sources
	+ import('ProfileData.fab').sources
	+ import('TableGen.fab').sources
	+ import('ToolDrivers.fab').sources
	+ import('Transforms').sources
	+ import('Support.fab').sources
	+ import('XRay.fab').sources
	;
