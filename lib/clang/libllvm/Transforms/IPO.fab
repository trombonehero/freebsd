# $FreeBSD$

sources =
{
	subdir = llvmlibdir :: 'Transforms';

	files(
		AlwaysInliner.cpp ArgumentPromotion.cpp BarrierNoopPass.cpp
		CalledValuePropagation.cpp ConstantMerge.cpp CrossDSOCFI.cpp
		DeadArgumentElimination.cpp ElimAvailExtern.cpp ExtractGV.cpp
		ForceFunctionAttrs.cpp FunctionAttrs.cpp FunctionImport.cpp
		GlobalDCE.cpp GlobalOpt.cpp GlobalSplit.cpp HotColdSplitting.cpp
		IPConstantPropagation.cpp InferFunctionAttrs.cpp InlineSimple.cpp
		Inliner.cpp Internalize.cpp LoopExtractor.cpp LowerTypeTests.cpp
		MergeFunctions.cpp PartialInlining.cpp PassManagerBuilder.cpp
		PruneEH.cpp SCCP.cpp SampleProfile.cpp StripDeadPrototypes.cpp
		StripSymbols.cpp SyntheticCountsPropagation.cpp
		ThinLTOBitcodeWriter.cpp WholeProgramDevirt.cpp
		,
		subdir = 'IPO'
	)
	+
	(if opts.llvm.clang.extras
	{
		files(BlockExtractor.cpp IPO.cpp, subdir='IPO')
	} else [])
};
