# vim: sw=4:ts=4:tw=78
# $FreeBSD$

#.if ${MK_LLVM_TARGET_SPARC} != "no"
#TGHDRS+=	SparcGenAsmMatcher.inc
#TGHDRS+=	SparcGenAsmWriter.inc
#TGHDRS+=	SparcGenCallingConv.inc
#TGHDRS+=	SparcGenDAGISel.inc
#TGHDRS+=	SparcGenDisassemblerTables.inc
#TGHDRS+=	SparcGenInstrInfo.inc
#TGHDRS+=	SparcGenMCCodeEmitter.inc
#TGHDRS+=	SparcGenRegisterInfo.inc
#TGHDRS+=	SparcGenSubtargetInfo.inc
#.endif # MK_LLVM_TARGET_SPARC

sources =
{
	subdir = (llvmlibdir :: 'Target') :: 'Sparc';	# TODO: fix :::

	files(
		DelaySlotFiller.cpp LeonPasses.cpp SparcAsmPrinter.cpp
		SparcFrameLowering.cpp SparcISelDAGToDAG.cpp SparcISelLowering.cpp
		SparcInstrInfo.cpp SparcMCInstLower.cpp SparcMachineFunctionInfo.cpp
		SparcRegisterInfo.cpp SparcSubtarget.cpp SparcTargetMachine.cpp
		SparcTargetObjectFile.cpp
	)
	+ files(SparcAsmParser.cpp, subdir='AsmParser')
	+ files(SparcInstPrinter.cpp, subdir='InstPrinter')
	+ files(
		SparcAsmBackend.cpp
		SparcELFObjectWriter.cpp
		SparcMCAsmInfo.cpp
		SparcMCCodeEmitter.cpp
		SparcMCExpr.cpp
		SparcMCTargetDesc.cpp
		SparcTargetStreamer.cpp
		,
		subdir = 'MCTargetDesc'
	)
	+ files(SparcTargetInfo.cpp, subdir='TargetInfo')
	+ (if opts.llvm.xdw
	{
		files(SparcDisassembler.cpp, subdir='Disassembler')
	}
	else [])
};
